{"version":3,"sources":["Columns.js","Day.js","CoronaCache.js","Modal.js","ModalChart.js","Spreadsheet.js","App.js","serviceWorker.js","index.js"],"names":["columnKeys","tempObjectMap","map","value","lodash","startCase","Day","forEach","props","this","index","day","prevDay","formatNumbers","row","positive","totalRecovered","recovered","activeInfected","death","Math","round","newPositive","dateString","date","toString","Date","substring","toLocaleDateString","year","month","formattedNumbers","key","toLocaleString","navigator","language","minimumFractionDigits","formatted","prevActiveInfected","infectionRate","CoronaCache","callback","setEarliestDate","loadCachedDays","valid","buildCache","earliestCacheDate","moment","subtract","toDate","cachedData","localStorage","getItem","coronaData","JSON","parse","cacheTimestamp","axios","get","then","response","now","data","setItem","stringify","Modal","show","className","style","position","top","bottom","left","right","backgroundColor","padding","onClick","onClose","borderRadius","maxWidth","minHeight","margin","Table","striped","bordered","hover","Object","keys","i","length","React","Component","ModalChart","changeStartDate","setState","startDate","changeEndDate","endDate","handleSelectChange","selectedOption","newArray","push","state","currentDate","dates","setTime","getTime","getDateRange","dateLabels","format","records","days","datasets","colors","option","color","sample","dataset","type","label","fill","borderColor","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","record","selectOptions","dataPoints","chartSelectionLine","clear","width","height","textAlign","labels","getLabels","getDatasets","isChartValid","selected","onChange","display","float","options","isMulti","placeholder","Spreadsheet","toggleModal","event","activeDay","currentTarget","id","isOpen","toggleModalChart","modalChartIsOpen","isShowingModal","handleClick","handleClose","isFetching","meta","hasDays","setData","bind","prevProps","formatData","reverse","dayObject","Button","variant","title","keyname","idx","data-id","deathIncrease","App","document","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bc05f227.chunk.js","sourcesContent":["import lodash from 'lodash'\n\nexport const columnKeys = [\n\t\"states\",\n\t\"positive\",\n\t\"negative\",\n\t\"pending\",\n\t\"hospitalizedCurrently\",\n\t\"hospitalizedCumulative\",\n\t\"inIcuCurrently\",\n\t\"inIcuCumulative\",\n\t\"onVentilatorCurrently\",\n\t\"onVentilatorCumulative\",\n\t\"recovered\",\n\t\"death\",\n\t\"hospitalized\",\n\t\"total\",\n\t\"totalTestResults\",\n\t\"posNeg\",\n\t\"deathIncrease\",\n\t\"hospitalizedIncrease\",\n\t\"negativeIncrease\",\n\t\"positiveIncrease\",\n\t\"totalTestResultsIncrease\",\n\t\"prevActiveInfected\",\n\t\"newPositive\",\n\t\"totalRecovered\",\n\t\"activeInfected\",\n\t\"infectionRate\"\n];\n\nexport const columnsMap = columnKeys.map(function (value) {\n\t\treturn {\"value\" : value, \"label\": lodash.startCase(value)}\n\t}\n)\n\nlet tempObjectMap = {}\nexport const columnsObjectMap = columnKeys.forEach(function (value) {\n\ttempObjectMap[value] = lodash.startCase(value)\n})\n\nexport const objectMap = tempObjectMap\n\nexport const columnLabels = columnKeys.map(function (value) {\n\treturn lodash.startCase(value)\n}\n)\n\nexport default columnsMap\n","import { columnKeys } from './Columns.js'\n\nexport class Day {\n    constructor(props) {\n    \tthis.index = props.index;\n\t\t\tthis.day = props.day;\n\t\t\tthis.prevDay = props.prevDay;\n\n\t\t\tthis.formatNumbers()\n\t\t\tthis.row = this.row()\n    }\n\n    newPositive() {\n      return this.prevDay ? this.day.positive - this.prevDay.row.positive : this.day.positive\n    }\n\n    totalRecovered() {\n\t\t\treturn this.prevDay ? this.prevDay.row.totalRecovered + this.day.recovered : 0\n\t\t}\n\n\t\tprevActiveInfected() {\n\t\t\treturn this.prevDay ? this.prevDay.row.activeInfected : 0\n\t\t}\n\n\t\tactiveInfected() {\n\t\t\treturn this.day.positive - (this.totalRecovered() + this.day.death)\n\t\t}\n\n\t\tinfectionRate() {\n\t\t\treturn this.prevDay ? Math.round(100 * (1 + this.newPositive() / this.prevDay.row.activeInfected)) / 100 : null\n\t\t}\n\n\t\tdate() {\n\t\t\tlet dateString = this.day.date.toString()\n\n\t\t\tlet date = new Date(dateString.substring(0, 4)+'-'+dateString.substring(4, 6)+'-'+dateString.substring(6, 8))\n\n\t\t\tvar options = { year: 'numeric', month: 'long', day: 'numeric' };\n\n\t\t\treturn date.toLocaleDateString(\"en-US\", options)\n\t\t}\n\n\t\tformatNumbers() {\n\t\t\tthis.day.formattedNumbers = {};\n\t\t\tcolumnKeys.forEach(key => {\n\t\t\t\tthis.day.formattedNumbers[key] = this.day[key] ? this.day[key].toLocaleString(navigator.language, { minimumFractionDigits: 0 }) : ''\n\t\t\t})\n\t\t}\n\n\t\trow() {\n\t\t\treturn { ...this.day,\n\t\t\t\tindex: this.index,\n\t\t\t\tformatted: this.formattedNumbers,\n\t\t\t\tprevActiveInfected: this.prevActiveInfected(),\n\t\t\t\tnewPositive: this.newPositive(),\n\t\t\t\ttotalRecovered: this.totalRecovered(),\n\t\t\t\tactiveInfected: this.activeInfected(),\n\t\t\t\tinfectionRate: this.infectionRate(),\n\t\t\t\tdate: this.date()\n\t\t\t}\n\t\t}\n}","import axios from 'axios'\nimport moment from 'moment'\n\nclass CoronaCache\n{\n \tconstructor(props) {\n\t\tif (props.callback) {\n\t\t\tthis.callback = props.callback\n\t\t}\n\n\t\tthis.setEarliestDate()\n\t\tthis.loadCachedDays()\n\n\t\tthis.valid = false\n\t\tif (!this.valid)\n\t\t{\n\t\t\tthis.buildCache()\n\t\t}\n \t}\n\n \tsetEarliestDate() {\n\t\t\tthis.earliestCacheDate = moment().subtract(3, 'hours').toDate()\n \t}\n\n \tloadCachedDays()\n \t{\n \t\tlet cachedData = localStorage.getItem('coronadata')\n\n \t \tif (!cachedData) {\n\t\t\tthis.valid = false\n\t\t\treturn false\n \t \t}\n\t\t\n\t\tthis.coronaData = JSON.parse(cachedData)\n\t\tlet cacheDate = this.coronaData.cacheTimestamp\n\n \t  if (cacheDate < this.earliestCacheDate) {\n\t\t\tthis.valid = false\n\t\t\treturn\n \t  }\n\n\t\tthis.callback(this.coronaData)\n\t\tthis.valid = true\n \t}\n\n\tbuildCache() {\n\t\taxios.get('https://covidtracking.com/api/us/daily')\n\t\t\t.then(response => {\n\t\t\t\tthis.coronaData = { cacheTimestamp: Date.now(), data: response.data}\n\t\t\t\tlocalStorage.setItem('coronadata', JSON.stringify(this.coronaData))\n\t\t\t\tthis.callback(this.coronaData)\t\t\n\t\t\t})\n\t}\n}\n\nexport default CoronaCache","import React from 'react'\nimport { Table } from 'react-bootstrap'\nimport PropTypes from 'prop-types'\nimport lodash from 'lodash'\n\n// lifted from https://daveceddia.com/open-modal-in-react/\nclass Modal extends React.Component {\n  render() {\n    // Render nothing if the \"show\" prop is false\n    if(!this.props.show) {\n      return null;\n\t\t}\n\t\t\n    // The gray background\n    const backdropStyle = {\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // The modal \"window\"\n    const modalStyle = {\n      backgroundColor: '#fff',\n      borderRadius: 5,\n      maxWidth: 500,\n      minHeight: 300,\n      margin: '0 auto',\n      padding: 30\n    };\n\n    return (\n      <div className=\"backdrop\" style={backdropStyle} onClick={this.props.onClose}>\n        <div className=\"modal-container \" style={modalStyle}>\n\t\t\t\t{ this.props.show \n\t\t\t\t\t? \n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{this.props.day.date}\n\t\t\t\t\t\t\t<Table className=\"DialogTable\" striped bordered hover>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tObject.keys(this.props.day.formattedNumbers).map((key, i) =>\n\t\t\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t\t\t<th>{lodash.startCase(key)}</th>\n\t\t\t\t\t\t\t\t\t\t\t<td>{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.day.formattedNumbers[key].length > 0 \n\t\t\t\t\t\t\t\t\t\t\t\t? this.props.day.formattedNumbers[key] \n\t\t\t\t\t\t\t\t\t\t\t\t: this.props.day[key] \n\t\t\t\t\t\t\t\t\t\t\t\t\t? this.props.day[key].toLocaleString(navigator.language, { minimumFractionDigits: 0 }) \n\t\t\t\t\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t: '' }\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n  children: PropTypes.node\n};\n\nexport default Modal;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment'\nimport Select from 'react-select'\nimport {Line} from 'react-chartjs-2'\nimport lodash from 'lodash'\nimport { columnKeys } from './Columns.js'\n\nclass ModalChart extends React.Component {\n\tdataPoints() {\n\t\tlet newArray = []\n\t\t\n\t\tcolumnKeys.forEach(function (value) {\n\t\t\t\tnewArray.push({\"value\" : value, \"label\": lodash.startCase(value)})\n\t\t\t}\n\t\t)\n\t\treturn newArray\n\t}\n\n\tcomponentDidMount() {\n    this.setState({\n\t\t\tendDate: moment().toDate(),\n\t\t\tstartDate: moment().subtract(1, 'month').toDate(),\n\t\t\tselectedOption: []\n\t\t})\n  }\n\n\tisChartValid () {\n\t\treturn (this.state.selectedOption && this.state.selectedOption.length > 0)\n\t}\n\n\tchangeStartDate = date => {\n    this.setState({\n      startDate: date\n    });\n\t};\n\n\tchangeEndDate = date => {\n    this.setState({\n      endDate: date\n    });\n\t};\n\n\thandleSelectChange = selectedOption => {\n    this.setState({ selectedOption: selectedOption });\n\t};\n\t\n\tgetDateRange() {\n\t\tlet startDate = this.state.startDate\n\t\tlet currentDate = new Date(startDate)\n\t\tlet endDate = this.state.endDate\n\n\t\tlet dates = []\n\t\twhile (currentDate < endDate) {\n\t\t\tcurrentDate.setTime(currentDate.getTime() + (24 * 60 * 60 * 1000))\n\t\t\tdates.push(new Date(currentDate))\n\t\t}\n\n\t\treturn dates\n\t}\n\n\tgetLabels() {\n\t\tlet dates = this.getDateRange()\n\t\tlet dateLabels = []\n\t\t\n\t\tdates.forEach((date) => {\n\t\t\tdateLabels.push(moment(date).format(\"MMM Do\"))\n\t\t})\n\n\t\treturn dateLabels\n\t}\n\n\tgetDatasets() {\n\t\tlet selectedOption = this.state.selectedOption\n\t\tlet dates = this.getDateRange()\n\t\tlet records = this.props.days\n\n\t\tlet datasets = []\n\n\t\tif (!selectedOption)\n\t\t{\n\t\t\tthis.valid = false\n\t\t\treturn\n\t\t}\n\t\t\n\t\tlet colors = \n\t\t// Blue colors\n\t\t['#B0E0E6','#ADD8E6','#87CEFA','#87CEEB','#00BFFF','#B0C4DE','#1E90FF','#6495ED','#4682B4','#4169E1','#0000FF','#0000CD','#00008B','#000080','#191970','#7B68EE','#6A5ACD','#483D8B',\n\t\t// Red colors\n\t\t'#FFA07A','#FA8072','#E9967A','#F08080','#CD5C5C','#DC143C','#B22222','#FF0000','#8B0000',\n\t\t// Green\n\t\t'#7CFC00','#7FFF00','#32CD32','#00FF00','#228B22','#008000','#006400','#ADFF2F','#9ACD32','#00FF7F','#00FA9A','#90EE90','#98FB98','#8FBC8F','#3CB371','#2E8B57','#808000','#556B2F','#6B8E23',\n\t\t// Orange colors\n\t\t'#FF7F50','#FF6347','#FF4500','#FFD700','#FFA500','#FF8C00',\n\t\t// Yellow colors\n\t\t'#FFFFE0','#FFFACD','#FAFAD2','#FFEFD5','#FFE4B5','#FFDAB9','#EEE8AA','#F0E68C','#BDB76B','#FFFF00',\n\t\t// Cyan colors\n\t\t'#E0FFFF','#00FFFF','#00FFFF','#7FFFD4','#66CDAA','#AFEEEE','#40E0D0','#48D1CC','#00CED1','#20B2AA','#5F9EA0','#008B8B','#008080',\n\t\t// Pink colors\n\t\t'#FFC0CB','#FFB6C1','#FF69B4','#FF1493','#DB7093','#C71585',\n\t\t// Gray colors\n\t\t'#DCDCDC','#D3D3D3','#C0C0C0','#A9A9A9','#808080','#696969','#778899','#708090','#2F4F4F','#000000',\n\t\t// Brown colors\n\t\t'#FFF8DC','#FFEBCD','#FFE4C4','#FFDEAD','#F5DEB3','#DEB887','#D2B48C','#BC8F8F','#F4A460','#DAA520','#CD853F','#D2691E','#8B4513','#A0522D','#A52A2A','#800000',\n\t\t// Purple colors\n\t\t'#E6E6FA','#D8BFD8','#DDA0DD','#EE82EE','#DA70D6','#FF00FF','#FF00FF','#BA55D3','#9370DB','#8A2BE2','#9400D3','#9932CC','#8B008B','#800080','#4B0082']\n\n\t\tselectedOption.forEach((option) => {\n\t\t\tlet color = lodash.sample(colors)\n\t\t\tlet dataset = {\n\t\t\t\ttype: 'line',\n\t\t\t\tlabel: option.label,\n\t\t\t\tfill: false,\n\t\t\t\tborderColor: color,\n\t\t\t\tbackgroundColor: color,\n\t\t\t\tpointBorderColor: color,\n\t\t\t\tpointBackgroundColor: color,\n\t\t\t\tpointHoverBackgroundColor: color,\n\t\t\t\tpointHoverBorderColor: color,\n\t\t\t\tdata: []\n\t\t\t}\n\t\t\n\t\t\tlet data = []\n\t\t\tdates.forEach((date) => {\n\t\t\t\tlet dateString = moment(date).format('LL')\n\t\t\t\trecords.forEach((record) => {\n\t\t\t\t\tif (record.date === dateString) {\n\t\t\t\t\t\tdata.push(record[option.value])\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t\tdataset.data = data\n\n\t\t\tdatasets.push(dataset)\n\t\t})\n\n\t\treturn datasets\n\t}\n\n  render() {\n    // Render nothing if the \"show\" prop is false\n    if(!this.props.show) {\n      return null;\n\t\t}\n\n\t\tconst { selectedOption } = this.state\n\t\n\t\tconst selectOptions = this.dataPoints()\n\n    // The gray background\n    const backdropStyle = {\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // The modal \"window\"\n    const modalStyle = {\n      backgroundColor: '#fff',\n      borderRadius: 5,\n      minHeight: '98%',\n      margin: '0 auto',\n      padding: 30\n    };\n\n\t\tconst selectStyle = {\n\t\t\tdisplay: \"inline\",\n\t\t\tfloat: \"left\",\n\t\t\tclear: \"none\",\n\t\t\twidth: 400\n\t\t}\n\n\t\tconst chartSelectionLine = {\n\t\t\tclear: \"both\",\n\t\t\twidth: \"100%\",\n\t\t\theight: \"40px\",\n\t\t\tpadding: \"8px\",\n\t\t\ttextAlign: \"left\"\n\t\t}\n\n\t\tconst footerStyle = {\n\t\t\twidth: '100%',\n\t\t\ttextAlign: 'right'\n\t\t}\n\n\t\tconst data = {\n\t\t\tlabels: this.getLabels(),\n\t\t\tdatasets: this.getDatasets()\n\t\t}\n\n\t\treturn (\n      <div className=\"backdrop\" style={backdropStyle}>\n        <div className=\"modal-container \" style={modalStyle}>\n\t\t\t\t{ this.props.show \n\t\t\t\t\t? \n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"chartContainer\">\n\t\t\t\t\t\t\t\t{this.isChartValid() ? <Line data={data} /> : ''}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"chartSelectionsContainer\">\n\t\t\t\t\t\t\t\t<div style = {chartSelectionLine}>Range: <DatePicker selected={this.state.startDate} onChange={this.changeStartDate} /> to <DatePicker selected={this.state.endDate} onChange={this.changeEndDate} /></div>\n\t\t\t\t\t\t\t\t<div style={chartSelectionLine}>\n\t\t\t\t\t\t\t\t\t<div style={selectStyle}>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tvalue={selectedOption}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleSelectChange}\n\t\t\t\t\t\t\t\t\t\t\toptions={selectOptions}\n\t\t\t\t\t\t\t\t\t\t\tisMulti={true}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Choose chart values\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t: '' }\n\t\t\t\t\t<div className=\"footer\" style={footerStyle}>\n\t\t\t\t\t\t<button onClick={this.props.onClose}>Close</button>\n\t\t\t\t\t</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nModalChart.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n\tdays: PropTypes.array\n}\n\nexport default ModalChart","import React, { Component } from 'react'\nimport './Spreadsheet.css'\nimport { Table } from 'react-bootstrap'\nimport { Day } from './Day.js'\nimport CoronaCache from './CoronaCache.js'\nimport Modal from './Modal.js'\nimport {Button} from 'react-bootstrap'\nimport ModalChart from './ModalChart.js'\n\nclass Spreadsheet extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {days:[], isFetching: false}\n  }\n\n\tcomponentDidMount() {\n    this.setState({\n      days: [],\n      meta: {},\n      hasDays: false,\n      isFetching: true,\n      activeDay: false,\n\t\t\tisOpen: false,\n\t\t\tmodalChartIsOpen: false\n    })\n\n    new CoronaCache({callback: this.setData.bind(this)})\n  }\n\n  toggleModal = event => {\n    this.setState({\n      activeDay: this.state.days[event.currentTarget.dataset.id],\n      isOpen: !this.state.isOpen\n    });\n  }\n\n\ttoggleModalChart = event => {\n\t\tthis.setState({modalChartIsOpen: !this.state.modalChartIsOpen})\n\t}\n\n  componentDidUpdate(prevProps) {\n    if (this.props.days !== prevProps.days)\n      this.setState()\n  }\n\n  state = {\n    isShowingModal: false,\n  }\n  handleClick = () => this.setState({isShowingModal: true})\n  handleClose = () => this.setState({isShowingModal: false})\n\n  shouldComponentUpdate(props) {\n    return true\n  }\n\n  setData(days) {\n    days = this.formatData(days.data)\n    this.setState({ days: days, isFetching: false, hasDays: true, isOpen: false, activeDay: false})\n  }\n\n  formatData(days) {\n    var prevDay = null\n    days.reverse().forEach((day, i) => {\n      let dayObject = new Day({ index: i, day: day, prevDay: prevDay  })\n      days[i] = dayObject.row\n      prevDay = dayObject\n    })\n\n    return days\n  }\n\n  render() {\n    const { days } = this.state\n\t\treturn (\n      <div className=\"Spreadsheet-container\">\n\t\t\t\t<p><Button variant=\"primary\" onClick={this.toggleModalChart}>Chart</Button></p>\n        <script>var data = {JSON.stringify(days)}</script>\n        <Table striped bordered hover className=\"Spreadsheet\">\n          <thead className=\"Spreadsheet-header\">\n            <tr>\n              <th className=\"Date\">Date</th>\n              <th className=\"Confirmed\">Confirmed</th>\n              <th className=\"NewInfected\">New Infected</th>\n              <th className=\"Recovered\">Recovered</th>\n              <th className=\"TotalDead\">Dead</th>\n              <th className=\"TotalRecovered\">Total Recovered</th>\n              <th className=\"Dead\">Total Dead</th>\n              <th className=\"ActiveInfected\">Active Infected</th>\n              <th className=\"InfectionRate\" title=\"Non-scientific!\">*Infection rate</th>\n            </tr>\n          </thead>\n          <tbody className=\"Spreadsheet-body\">\n            {days.reverse().map((day, i) =>\n              <tr key={i} keyname={day.idx} onClick={this.toggleModal} data-id={day.index}>\n                <td className=\"Date\" >\n                  {day.date}\n                </td>\n                <td className=\"Confirmed\" >{day.positive.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</td>\n                <td className=\"NewInfected\" >{day.newPositive.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</td>\n                <td className=\"Recovered\" >{day.recovered > 0 ? day.recovered.toLocaleString(navigator.language, { minimumFractionDigits: 0 }) : ''}</td>\n                <td className=\"TotalDead\" >{day.deathIncrease > 0 ? day.deathIncrease.toLocaleString(navigator.language, { minimumFractionDigits: 0 }) : ''}</td>\n                <td className=\"TotalRecovered\" >{day.totalRecovered > 0 ? day.totalRecovered.toLocaleString(navigator.language, { minimumFractionDigits: 0 }) : ''}</td>\n                <td className=\"Dead\" >{day.death > 0 ? day.death.toLocaleString(navigator.language, { minimumFractionDigits: 0 }) : ''}</td>\n                <td className=\"ActiveInfected\" >{day.activeInfected.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</td>\n                <td className=\"InfectionRate\">{day.infectionRate}</td>\n                </tr>\n              )}\n            </tbody>\n        </Table>\n        <Modal show={this.state.isOpen} onClose={this.toggleModal} day={this.state.activeDay} />\n\t\t\t\t<ModalChart show={this.state.modalChartIsOpen} onClose={this.toggleModalChart} days={days} />\n      </div>\n\t\t)\n  }\n}\nexport default Spreadsheet;\n  ","import React, { Component } from 'react';\nimport './App.css';\nimport Spreadsheet from './Spreadsheet'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component { \n  componentDidMount(){\n    document.title = \"Coronavirus Tracker (US)\"\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <h1>Coronavirus Tracker (US)</h1>\n        <Spreadsheet />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}